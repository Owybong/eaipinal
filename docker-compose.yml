services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d inventory_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  product_service:
    build: ./product_service
    ports:
      - "5002:5001"
    volumes:
      - product_data:/app/data
    networks:
      - ecommerce_network
    depends_on:
      - postgres

  inventory_service:
    build: ./inventory_service
    ports:
      - "5003:5003"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres_db:5432/inventory_db
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce_network

  customer_service:
    build: ./customer_service
    ports:
      - "5000:5000"
    volumes:
      - customer_data:/app/data
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    networks:
      - ecommerce_network
    depends_on:
      - inventory_service
      - product_service

  order_service:
    build: ./order_service
    ports:
      - "5004:5004"
    volumes:
      - order_data:/app/data
    environment:
      - PRODUCT_SERVICE_URL=http://product_service:5001
      - CUSTOMER_SERVICE_URL=http://customer_service:5000
      - INVENTORY_SERVICE_URL=http://inventory_service:5003
    networks:
      - ecommerce_network
    depends_on:
      - product_service
      - customer_service
      - inventory_service

  delivery_service:
    build: ./delivery_service
    ports:
      - "5005:5005"
    volumes:
      - delivery_data:/app/data
    environment:
      - ORDER_SERVICE_URL=http://order_service:5004
    networks:
      - ecommerce_network
    depends_on:
      - order_service

  frontend:
    build: ./frontendnya
    ports:
      - "3000:3000"
    environment:
      - PRODUCT_SERVICE_URL=http://product_service:5001
      - ORDER_SERVICE_URL=http://order_service:5004
      - DELIVERY_SERVICE_URL=http://delivery_service:5005
      - ANALYTICS_SERVICE_URL=http://host.docker.internal:5006
      - CUSTOMER_SERVICE_URL=http://customer_service:5000
      - INVENTORY_SERVICE_URL=http://inventory_service:5003
    networks:
      - ecommerce_network
    depends_on:
      - product_service
      - order_service
      - delivery_service
      - customer_service
      - inventory_service
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  ecommerce_network:
    driver: bridge

volumes:
  postgres_data:
  product_data:
  order_data:
  delivery_data:
  customer_data: